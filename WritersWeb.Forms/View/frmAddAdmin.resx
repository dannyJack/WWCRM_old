<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAArwAAAG2CAYAAACdyVW4AAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACwwAAAsMAT9AIsgAAB0nSURBVHhe7d0HmG3rXZBxC9gL
        NhALFuwoKlas2BuoKCIgdlRsqIgNQawQUYogBCJIky4tBC6KkUhIQIoloRMQEUgBDAnYsOD3xvnHz+Wa
        OXPuvbl3zj6/3/O8d/bsvfaePfecmfmfNWt9+7sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        rH0Fmd7O5b19CcgZ7Ltfj9/z6OP2fPvHR7+56M+ivbUft2qJr89cdXxt69Y2xB6X9zobLKS7WAPvV6xe
        vDLwSpKelGaIfjy7zcfo+v1Ql6mB/Pj2bFCf2vt+bJaB3Jthvua6/cTUGcTb694e+ob62ZPf5Qb29rS3
        J71j3uf49vao97aBfa9hvZVnGtR7v8G/j/meq49ctV5tw2x7aufY2uetnn/1dg5JmHp/mutmCL5Ns/f3
        uutvU8/zrLMhR9r70tWLysArSdLdbD/+vLquvep/a/WU1d9ZddhBKx98xOqTVx1L25JeX7JqSaavu+o/
        rL7hqm+8at6/V1+/6v7zWHtzfW+rl3Jtsf9qDdTqctfX3K/L3dZzrK++qrPq5+3Ur6W/ctXeui9ffdmq
        Qea6+ty/+KoZ5O/Vcai/zaB/Npzv3TSYXze4t1fyrH0b3b7+DrxwZeCVJOlJbt/b3GDb+w21f3f1PqsP
        WHUsbasefPpqDjtoEGrAa3icIVb/77B+dnvdZpDfb5sB/WxI37tuSJ9Bveb9/bpqUD9rhvcZ4G8zxN9r
        WD92rwG97mdAr0ez3eNZj23glSTpCe7sUIpOaGyw7aVyP3j1UateWaw9tc9dNYw0NDV0veIH91Vdns4G
        Ot2d9j+rvW7bh/N9QD/bbgb0m9oH9H0v+wzpx/ZBvSF9H9Sry3tnA3wdh/h9b/txaD+2D/AzoJ91HNBn
        SN+H3BnK57Y+dv8PDbySJL2KmgG3OrlvBttZ+aC9tb2yWMfT9sO+YaIhpR/QrzjR5uryDD3S49H+9+n4
        d2v+vp0125wN6Pt9Z5sG9EczpO+D+rHjoL7vVa/9+uqx/uPqpQZeSZIee3NSXIPtu68abGeN2k4Ua29t
        e6na49Sesn4QNxTMHlvDrXRzZ18b8zVzbL/95atvN/BKknTvZpidpdk6FOFvr/7+6sNXn7SaE8b6NW17
        a9vD1F6r9nL1g9ehCNITm4FXkqTVfthB7zfQNsy+26qBtuW8ekWxf7Rqrdqnr5656jCEjlfs16ztre1X
        sg2280PWUCs9+fU1+LLVtxl4JUmX3j7Uzsli7bFtJYQOP2iobTWED1p97GqOre3kmE7imWF2Ojt+UdLd
        y8ArSbrIjoNtlxtsW7P2uMTXI6tnrzqju+NqZw+tpMupgdchDZKkB7LjYFuzxFfH1bbEV68s1osxtG7t
        c1adNNaxte2xdaKY9HBk4JUkPRDNcDt1nG17bHuFsVni69NWvRhDJ4214P4s8dUPPMOt9PD2rSuHNEiS
        7lSzvFcrIXTSWC+dO0t8dRjCP1nNCzJY4kvSvXrpysArSXrCmyW+GmrnJXQ/cPXRq09dtae2V01qea9e
        tWmW+Gqw7TjbBtl9qDXYSrquXnjCwCtJetzaDzvo/bMlvhpse/ncZ6wabGclhJb3as3aXnlpVkDYB1pD
        raRHkz28kqT7bh9q52SxWeJrhtpWQ/gHq49ZdWxtS3y1EsIs8dVQO8t7nf2AkqTHK3t4JUnXdhxs3/nq
        8izx9fdWT119yKqTxh5Zzdq1HVfbUHv2w0eSnsi+efVyA68kPdydDbUdW9thCA22LfHVCzL0SmP7El/t
        se3Y2g5D6HADJ4pJuot908rAK0kPUTPcTh1fO8fVfsTqE1efsXrW6nNWs8RXL6HbCWMz2BpuJT0oGXgl
        6SGo42sbbN9j1WDbizF8yuqZqwbaXozhS1cvWHV8bT8gZqg13Ep60DPwStIFdLbEVy+f22DbEl/trf2i
        VUNtx9Z+zarDEPZ1aw20ki61l6wMvJJ0R9sPPej9WeLrXVdPWc0e29aubYmvWQmhobYlvjoEYVZD6Jv+
        DLUGW0kPU/2j/mUGXkl6cpphdpb26vLsrZ0lvhpqWw3haatZ4mvWrm2wtcSXJN1c/8h/xcA7ew/2b8Kd
        qftO1zRn8R63n862r/mGPmcCHzveZ34ITMftzzpuuz/m/rj3+/znPtO+/U33OT6fe3W/99m3f7T3me5n
        27vQ/uexd9ttz7Z7Iruf53S27V1qvpb2r6mbOm5/033Otj12v9s/ke3Pbf48+9pqsG0VhAba9121p7aX
        zv3YVSeOffpq32NriS9JenS9cuDtdck7K/eRVb8W65ivp19d7ptut02PrNrD0PVtV5388ElXdbnr5n6P
        XL3f43V738g/Yav3u77b224+/r7tx636IdDejd72Wur7x6u27fqax235nB7rkdX+/Htu1efRx+tjt22P
        0+X9c35kNdt0e9v1cfePMc+9x6su79u1PuV8Dj2/ud98vHn++3b9irLmc+76bu/x5v/NbNcrFnV29Yev
        Wjao9+e++/27rmP6ZtsP3eoHbdd33+pxZtvW2PzgVcsS9fYfXtX1+2NM3daC8/0A7zjC6nLtj1Nt156r
        1vLstfL33v+qbtsfp7fd3sL27fl676u63ODQEkrVNnO5bdum1+Svtu36eeyeU59P/x/m+c/nUD3HtpnP
        u7f759Bj9Fh7c11vu//U+31ePdf5HHrb+/N5759/z7Pb2q6z6acGpf3zaZtptm1JqfYSVper4zvnMeb+
        1fXvvmoI69fm7WHsV+fV/bu9+rizbb9Wb7v2SDbA1RxH2uN0e/dt2/2x267Br38c9nb/VX21XfU4PV7b
        NyTu/6BsgJz7zXPdt5/H3+/TdfMcpx6jwfS4/dTH6T5tN59n2+/PZ28+Rtv2+D2n/h/0/7g/z/7u9LXY
        95XPWnXS2PNXvWzu8Zja675x78313ffY8X77+2fbT/t2e2fbTvez7fRY7nN22726349x1v1uf9vOHvex
        dD+Pf9xWurT6/vfSBt7vXP2P1X9ffcdVvd/1Z/2vVbe33X/bmvt1+3H7Hvu/rv7zVf/l6v253/9czf16
        23Vt859W37bV+13f7fPxqseZ7Xv8HruPeXwu0/H5z2P1PI7b7s+/j7E/967fn/tx+57Pt29vu+/cbz7e
        PP+ed9u8fKvPee4/n9c879n2W1e9ikj18nkvW8199/vv237LqoWYO3Oxt73f9d23epzZtm3mB3BvX7zq
        APDqtmPd3l+wvpG2V6q63K9c54f51GPOdp1EM3XsYb+qneZXttXlbm9AqF65qbrcyThz7OI8Tu93W2eg
        79t2fY89z6vPp/8XPf+e13wO8wOhbfbPvcvzOcznWftzrv1XzfP/odvneU29v/8/aJvj59Cevqn1T4+f
        T/X/oM+1bb5s9cWrL7m6XC0v1X27vfvOY3V9JzU9b9VZ+y1F1eXq/t0+tV2PW23XXshOiuptv2rvuoa4
        2abLPU7X99ht+/mrhr0vWHW/rp9teoz6wq22/byr9vu1XW/bZh5z33bqtup+ve265261ruznro73m8fq
        9mev2uvaIQWdCNb7XX92nz5Oz6nn1/+D/j/359nfm74W5/tIzffFvk73+tqd5rrZbr/tuo6PM98T9vbt
        9/Zter7T2X3OtpvvQ3Of/X77tvM959h+v9l+but707Tf56zZru9p03X33beb76m137fm/sft+z467fef
        xzheN81jzvPY/9/sH+vYbD/N9fOc9vb77XXb/lz25358jLNtz7pum76/7u23Hev2s58vdXyc2Xa+N591
        fIzZvq/HY8f77nX7/Pw6drzvPF63vXA1g9fZ/fb322a23+8zjz/Pff8Y01w/2+2f62y/f6x53ON9Z9vZ
        fp7Tdffdt63j8z+777RvOz8r9/sd7zvXzfbX3Wev21458ErSw1T/MJ3Obj/Wdv0Ddbrt/R7kHs3/o2Nn
        29XZtns3bX/8c7ipfdtjN23fjoi9/X5nHbc/dtM28xg3PZ9jZ9vW2bb36uw51W23nR04N9U29+ps29m5
        Ne23HTtue9bZdu1A2jvevnfc9th128w/bqd73X5stjs+n/3jnd12bLY966btjs/juvbnfOxe280OxX1n
        wNntc/l43d5cX7ND4TsMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIk
        SbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugM
        vJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJ
        uugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8
        kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm6
        6Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLyS
        JEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbroDLySJEm66Ay8kiRJuugMvJIkSbrg
        XvSd/xup8NnI+eCaMwAAAABJRU5ErkJggg==
</value>
  </data>
</root>